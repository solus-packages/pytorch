--- a/cmake/Modules/FindRocksDB.cmake
+++ b/cmake/Modules/FindRocksDB.cmake
@@ -8,6 +8,8 @@
 #  RocksDB_INCLUDE_DIR
 #  RocksDB_LIBRARIES
 
+set(ROCKSDB_ROOT_DIR "/usr")
+
 find_path(RocksDB_INCLUDE_DIR NAMES rocksdb/db.h
                              PATHS ${ROCKSDB_ROOT_DIR} ${ROCKSDB_ROOT_DIR}/include)
 
@@ -17,7 +19,7 @@ find_library(RocksDB_LIBRARIES NAMES roc
 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(RocksDB DEFAULT_MSG RocksDB_INCLUDE_DIR RocksDB_LIBRARIES)
 
-if(ROCKSDB_FOUND)
+if(RocksDB_FOUND)
   message(STATUS "Found RocksDB  (include: ${RocksDB_INCLUDE_DIR}, library: ${RocksDB_LIBRARIES})")
   mark_as_advanced(RocksDB_INCLUDE_DIR RocksDB_LIBRARIES)
 endif()
--- a/modules/rocksdb/CMakeLists.txt
+++ b/modules/rocksdb/CMakeLists.txt
@@ -57,8 +57,8 @@ endif()
 # then you will need to depend on the caffe2_gpu_library as well.
 add_library(caffe2_rocksdb ${CMAKE_CURRENT_SOURCE_DIR}/rocksdb.cc)
 target_link_libraries(caffe2_rocksdb PUBLIC torch_library)
-target_link_libraries(caffe2_rocksdb PRIVATE ${RocksDB_LIBRARIES})
-target_include_directories(caffe2_rocksdb PRIVATE ${RocksDB_INCLUDE_DIR})
+target_link_libraries(caffe2_rocksdb PUBLIC ${RocksDB_LIBRARIES})
+target_include_directories(caffe2_rocksdb PUBLIC ${RocksDB_INCLUDE_DIR})
 install(TARGETS caffe2_rocksdb DESTINATION lib)
 
 # ---[ Last, Append the library to Caffe2_MODULES, if we are building with
